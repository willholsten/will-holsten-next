{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport BurgerMenu from '../BurgerMenu';\nimport Navigation from '../Navigation';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleToggleMenu\", function () {\n      _this.setState({\n        menuOpen: !_this.state.menuOpen\n      });\n\n      if (!_this.state.menuOpen) {\n        document.body.style.position = 'fixed';\n      } else if (_this.state.menuOpen) {\n        document.body.style.overflow = 'visible';\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseMenu\", function () {\n      _this.setState({\n        menuOpen: false\n      });\n    });\n\n    _this.state = {\n      menuOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"nav\", null, React.createElement(Navigation, {\n        handleCloseMenu: function handleCloseMenu() {\n          return _this2.handleCloseMenu();\n        },\n        classes: this.state.menuOpen ? 'open' : ''\n      }), React.createElement(BurgerMenu, {\n        classes: this.state.menuOpen ? 'invert' : '',\n        handleToggleMenu: function handleToggleMenu() {\n          return _this2.handleToggleMenu();\n        }\n      }));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport { Menu as default };","map":{"version":3,"sources":["/Users/willholsten/Code/Projects/Will-Holsten-Next/components/Menu/index.jsx"],"names":["BurgerMenu","Navigation","Menu","props","setState","menuOpen","state","document","body","style","position","overflow","handleCloseMenu","handleToggleMenu","React","Component"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;IAEqBC,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AADiB,uEAKA,YAAM;AACvB,YAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADV,OAAd;;AAGA,UAAI,CAAC,MAAKC,KAAL,CAAWD,QAAhB,EAA0B;AACxBE,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,OAA/B;AACD,OAFD,MAEO,IAAI,MAAKJ,KAAL,CAAWD,QAAf,EAAyB;AAC9BE,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,QAApB,GAA+B,SAA/B;AACD;AACF,KAdkB;;AAAA,sEAgBD,YAAM;AACtB,YAAKP,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KApBkB;;AAEjB,UAAKC,KAAL,GAAa;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;;;6BAmBQ;AAAA;;AACP,aACE,iCACE,oBAAC,UAAD;AACE,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACO,eAAL,EAAN;AAAA,SADnB;AAEE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWD,QAAX,GAAsB,MAAtB,GAA+B;AAF1C,QADF,EAKE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,QAAX,GAAsB,QAAtB,GAAiC,EAD5C;AAEE,QAAA,gBAAgB,EAAE;AAAA,iBAAM,MAAI,CAACQ,gBAAL,EAAN;AAAA;AAFpB,QALF,CADF;AAYD;;;;EApC+BC,KAAK,CAACC,S;;SAAnBb,I","sourcesContent":["import BurgerMenu from '../BurgerMenu';\nimport Navigation from '../Navigation';\n\nexport default class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { menuOpen: false };\n  }\n\n  handleToggleMenu = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n    if (!this.state.menuOpen) {\n      document.body.style.position = 'fixed';\n    } else if (this.state.menuOpen) {\n      document.body.style.overflow = 'visible';\n    }\n  };\n\n  handleCloseMenu = () => {\n    this.setState({\n      menuOpen: false\n    });\n  };\n\n  render() {\n    return (\n      <nav>\n        <Navigation\n          handleCloseMenu={() => this.handleCloseMenu()}\n          classes={this.state.menuOpen ? 'open' : ''}\n        />\n        <BurgerMenu\n          classes={this.state.menuOpen ? 'invert' : ''}\n          handleToggleMenu={() => this.handleToggleMenu()}\n        />\n      </nav>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}